   0  $accept : programa $end

   1  programa : nombre_programa bloque_sentencias

   2  nombre_programa : id
   3                  | cte
   4                  | cadena

   5  bloque_sentencias : bloque_sentencias '{' sentencia '}'
   6                    | '{' sentencia '}'
   7                    | '{' sentencia
   8                    | sentencia '}'

   9  sentencia : declarativa
  10            | ejecutable
  11            | sentencia declarativa
  12            | sentencia ejecutable

  13  declarativa : dec_variables
  14              | dec_funcion

  15  dec_variables : tipo list_variables ';'
  16                | list_variables ';'

  17  tipo : ui8
  18       | f64
  19       | id

  20  list_variables : id
  21                 | list_variables ',' id

  22  dec_funcion : header_funcion cola_funcion
  23              | header_funcion parametro cola_funcion
  24              | header_funcion parametro ',' parametro cola_funcion

  25  header_funcion : fun id '('

  26  cola_funcion : ')' ':' tipo '{' cuerpo_fun '}'

  27  parametro : tipo id
  28            | tipo

  29  cuerpo_fun : sentencia Return '(' expresion ')' ';'
  30             | sentencia Return '(' expresion ';'
  31             | sentencia Return expresion ';'
  32             | sentencia Return expresion ')' ';'
  33             | sentencia Return expresion
  34             | sentencia Return '(' expresion ')'

  35  ejecutable : inst_ejecutable
  36             | defer inst_ejecutable

  37  inst_ejecutable : asignacion ';'
  38                  | seleccion ';'
  39                  | impresion ';'
  40                  | invocar_fun ';'
  41                  | for_continue ';'

  42  asignacion : id SIMB_ASIGNACION expresion

  43  expresion : expresion '+' termino
  44            | expresion '-' termino
  45            | termino

  46  termino : termino '*' factor
  47          | termino '/' factor
  48          | factor

  49  factor : id
  50         | cte
  51         | '-' cte

  52  retorno_funcion : id '(' ')'
  53                  | id '(' parametro_real ')'
  54                  | id '(' parametro_real ',' parametro_real ')'

  55  parametro_real : id
  56                 | cte

  57  seleccion : If condicion_if then_selec end_if
  58            | If condicion_if then_selec else_selecc end_if

  59  then_selec : then '{' ejecutable_for '}'
  60             | then inst_ejecutable_for

  61  else_selecc : Else '{' ejecutable_for '}'
  62              | Else inst_ejecutable_for

  63  condicion_if : '(' expresion_booleana ')'

  64  expresion_booleana : expresion comparador expresion

  65  comparador : SIMB_DISTINTO
  66             | SIMB_MAY_IGUAL
  67             | SIMB_MEN_IGUAL
  68             | '='
  69             | '<'
  70             | '>'

  71  impresion : out '(' cadena ')'
  72            | out cadena ')'
  73            | out '(' cadena

  74  invocar_fun : discard retorno_funcion
  75              | retorno_funcion

  76  for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'
  77               | For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for
  78               | cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'
  79               | cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for

  80  mas_o_menos : '+'
  81              | '-'

  82  ejecutable_for : ejecutable_for inst_ejecutable_for
  83                 | inst_ejecutable_for

  84  inst_ejecutable_for : inst_ejecutable
  85                      | Break ';'
  86                      | Break ':' cadena ';'
  87                      | Continue ';'

state 0
	$accept : . programa $end  (0)

	id  shift 1
	cte  shift 2
	cadena  shift 3
	.  error

	programa  goto 4
	nombre_programa  goto 5


state 1
	nombre_programa : id .  (2)

	.  reduce 2


state 2
	nombre_programa : cte .  (3)

	.  reduce 3


state 3
	nombre_programa : cadena .  (4)

	.  reduce 4


state 4
	$accept : programa . $end  (0)

	$end  accept


state 5
	programa : nombre_programa . bloque_sentencias  (1)

	id  shift 6
	cadena  shift 7
	If  shift 8
	out  shift 9
	fun  shift 10
	ui8  shift 11
	f64  shift 12
	discard  shift 13
	For  shift 14
	defer  shift 15
	'{'  shift 16
	.  error

	bloque_sentencias  goto 17
	sentencia  goto 18
	declarativa  goto 19
	ejecutable  goto 20
	dec_variables  goto 21
	dec_funcion  goto 22
	tipo  goto 23
	list_variables  goto 24
	header_funcion  goto 25
	inst_ejecutable  goto 26
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 6
	tipo : id .  (19)
	list_variables : id .  (20)
	asignacion : id . SIMB_ASIGNACION expresion  (42)
	retorno_funcion : id . '(' ')'  (52)
	retorno_funcion : id . '(' parametro_real ')'  (53)
	retorno_funcion : id . '(' parametro_real ',' parametro_real ')'  (54)

	SIMB_ASIGNACION  shift 33
	'('  shift 34
	id  reduce 19
	';'  reduce 20
	','  reduce 20


state 7
	for_continue : cadena . ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena . ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	':'  shift 35
	.  error


state 8
	seleccion : If . condicion_if then_selec end_if  (57)
	seleccion : If . condicion_if then_selec else_selecc end_if  (58)

	'('  shift 36
	.  error

	condicion_if  goto 37


state 9
	impresion : out . '(' cadena ')'  (71)
	impresion : out . cadena ')'  (72)
	impresion : out . '(' cadena  (73)

	cadena  shift 38
	'('  shift 39
	.  error


state 10
	header_funcion : fun . id '('  (25)

	id  shift 40
	.  error


state 11
	tipo : ui8 .  (17)

	.  reduce 17


state 12
	tipo : f64 .  (18)

	.  reduce 18


state 13
	invocar_fun : discard . retorno_funcion  (74)

	id  shift 41
	.  error

	retorno_funcion  goto 42


state 14
	for_continue : For . '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For . '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	'('  shift 43
	.  error


state 15
	ejecutable : defer . inst_ejecutable  (36)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	discard  shift 13
	For  shift 14
	.  error

	inst_ejecutable  goto 45
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 16
	bloque_sentencias : '{' . sentencia '}'  (6)
	bloque_sentencias : '{' . sentencia  (7)

	id  shift 6
	cadena  shift 7
	If  shift 8
	out  shift 9
	fun  shift 10
	ui8  shift 11
	f64  shift 12
	discard  shift 13
	For  shift 14
	defer  shift 15
	.  error

	sentencia  goto 46
	declarativa  goto 19
	ejecutable  goto 20
	dec_variables  goto 21
	dec_funcion  goto 22
	tipo  goto 23
	list_variables  goto 24
	header_funcion  goto 25
	inst_ejecutable  goto 26
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 17
	programa : nombre_programa bloque_sentencias .  (1)
	bloque_sentencias : bloque_sentencias . '{' sentencia '}'  (5)

	'{'  shift 47
	$end  reduce 1


state 18
	bloque_sentencias : sentencia . '}'  (8)
	sentencia : sentencia . declarativa  (11)
	sentencia : sentencia . ejecutable  (12)

	id  shift 6
	cadena  shift 7
	If  shift 8
	out  shift 9
	fun  shift 10
	ui8  shift 11
	f64  shift 12
	discard  shift 13
	For  shift 14
	defer  shift 15
	'}'  shift 48
	.  error

	declarativa  goto 49
	ejecutable  goto 50
	dec_variables  goto 21
	dec_funcion  goto 22
	tipo  goto 23
	list_variables  goto 24
	header_funcion  goto 25
	inst_ejecutable  goto 26
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 19
	sentencia : declarativa .  (9)

	.  reduce 9


state 20
	sentencia : ejecutable .  (10)

	.  reduce 10


state 21
	declarativa : dec_variables .  (13)

	.  reduce 13


state 22
	declarativa : dec_funcion .  (14)

	.  reduce 14


state 23
	dec_variables : tipo . list_variables ';'  (15)

	id  shift 51
	.  error

	list_variables  goto 52


state 24
	dec_variables : list_variables . ';'  (16)
	list_variables : list_variables . ',' id  (21)

	';'  shift 53
	','  shift 54
	.  error


state 25
	dec_funcion : header_funcion . cola_funcion  (22)
	dec_funcion : header_funcion . parametro cola_funcion  (23)
	dec_funcion : header_funcion . parametro ',' parametro cola_funcion  (24)

	id  shift 55
	ui8  shift 11
	f64  shift 12
	')'  shift 56
	.  error

	tipo  goto 57
	cola_funcion  goto 58
	parametro  goto 59


state 26
	ejecutable : inst_ejecutable .  (35)

	.  reduce 35


state 27
	inst_ejecutable : asignacion . ';'  (37)

	';'  shift 60
	.  error


state 28
	inst_ejecutable : seleccion . ';'  (38)

	';'  shift 61
	.  error


state 29
	inst_ejecutable : impresion . ';'  (39)

	';'  shift 62
	.  error


state 30
	inst_ejecutable : invocar_fun . ';'  (40)

	';'  shift 63
	.  error


state 31
	inst_ejecutable : for_continue . ';'  (41)

	';'  shift 64
	.  error


state 32
	invocar_fun : retorno_funcion .  (75)

	.  reduce 75


state 33
	asignacion : id SIMB_ASIGNACION . expresion  (42)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	.  error

	expresion  goto 68
	termino  goto 69
	factor  goto 70


state 34
	retorno_funcion : id '(' . ')'  (52)
	retorno_funcion : id '(' . parametro_real ')'  (53)
	retorno_funcion : id '(' . parametro_real ',' parametro_real ')'  (54)

	id  shift 71
	cte  shift 72
	')'  shift 73
	.  error

	parametro_real  goto 74


state 35
	for_continue : cadena ':' . For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' . For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	For  shift 75
	.  error


state 36
	condicion_if : '(' . expresion_booleana ')'  (63)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	.  error

	expresion  goto 76
	termino  goto 69
	factor  goto 70
	expresion_booleana  goto 77


state 37
	seleccion : If condicion_if . then_selec end_if  (57)
	seleccion : If condicion_if . then_selec else_selecc end_if  (58)

	then  shift 78
	.  error

	then_selec  goto 79


state 38
	impresion : out cadena . ')'  (72)

	')'  shift 80
	.  error


state 39
	impresion : out '(' . cadena ')'  (71)
	impresion : out '(' . cadena  (73)

	cadena  shift 81
	.  error


state 40
	header_funcion : fun id . '('  (25)

	'('  shift 82
	.  error


state 41
	retorno_funcion : id . '(' ')'  (52)
	retorno_funcion : id . '(' parametro_real ')'  (53)
	retorno_funcion : id . '(' parametro_real ',' parametro_real ')'  (54)

	'('  shift 34
	.  error


state 42
	invocar_fun : discard retorno_funcion .  (74)

	.  reduce 74


state 43
	for_continue : For '(' . id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' . id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	id  shift 83
	.  error


state 44
	asignacion : id . SIMB_ASIGNACION expresion  (42)
	retorno_funcion : id . '(' ')'  (52)
	retorno_funcion : id . '(' parametro_real ')'  (53)
	retorno_funcion : id . '(' parametro_real ',' parametro_real ')'  (54)

	SIMB_ASIGNACION  shift 33
	'('  shift 34
	.  error


state 45
	ejecutable : defer inst_ejecutable .  (36)

	.  reduce 36


state 46
	bloque_sentencias : '{' sentencia . '}'  (6)
	bloque_sentencias : '{' sentencia .  (7)
	sentencia : sentencia . declarativa  (11)
	sentencia : sentencia . ejecutable  (12)

	id  shift 6
	cadena  shift 7
	If  shift 8
	out  shift 9
	fun  shift 10
	ui8  shift 11
	f64  shift 12
	discard  shift 13
	For  shift 14
	defer  shift 15
	'}'  shift 84
	$end  reduce 7
	'{'  reduce 7

	declarativa  goto 49
	ejecutable  goto 50
	dec_variables  goto 21
	dec_funcion  goto 22
	tipo  goto 23
	list_variables  goto 24
	header_funcion  goto 25
	inst_ejecutable  goto 26
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 47
	bloque_sentencias : bloque_sentencias '{' . sentencia '}'  (5)

	id  shift 6
	cadena  shift 7
	If  shift 8
	out  shift 9
	fun  shift 10
	ui8  shift 11
	f64  shift 12
	discard  shift 13
	For  shift 14
	defer  shift 15
	.  error

	sentencia  goto 85
	declarativa  goto 19
	ejecutable  goto 20
	dec_variables  goto 21
	dec_funcion  goto 22
	tipo  goto 23
	list_variables  goto 24
	header_funcion  goto 25
	inst_ejecutable  goto 26
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 48
	bloque_sentencias : sentencia '}' .  (8)

	.  reduce 8


state 49
	sentencia : sentencia declarativa .  (11)

	.  reduce 11


state 50
	sentencia : sentencia ejecutable .  (12)

	.  reduce 12


state 51
	list_variables : id .  (20)

	.  reduce 20


state 52
	dec_variables : tipo list_variables . ';'  (15)
	list_variables : list_variables . ',' id  (21)

	';'  shift 86
	','  shift 54
	.  error


state 53
	dec_variables : list_variables ';' .  (16)

	.  reduce 16


state 54
	list_variables : list_variables ',' . id  (21)

	id  shift 87
	.  error


state 55
	tipo : id .  (19)

	.  reduce 19


state 56
	cola_funcion : ')' . ':' tipo '{' cuerpo_fun '}'  (26)

	':'  shift 88
	.  error


state 57
	parametro : tipo . id  (27)
	parametro : tipo .  (28)

	id  shift 89
	','  reduce 28
	')'  reduce 28


state 58
	dec_funcion : header_funcion cola_funcion .  (22)

	.  reduce 22


state 59
	dec_funcion : header_funcion parametro . cola_funcion  (23)
	dec_funcion : header_funcion parametro . ',' parametro cola_funcion  (24)

	','  shift 90
	')'  shift 56
	.  error

	cola_funcion  goto 91


state 60
	inst_ejecutable : asignacion ';' .  (37)

	.  reduce 37


state 61
	inst_ejecutable : seleccion ';' .  (38)

	.  reduce 38


state 62
	inst_ejecutable : impresion ';' .  (39)

	.  reduce 39


state 63
	inst_ejecutable : invocar_fun ';' .  (40)

	.  reduce 40


state 64
	inst_ejecutable : for_continue ';' .  (41)

	.  reduce 41


state 65
	factor : id .  (49)

	.  reduce 49


state 66
	factor : cte .  (50)

	.  reduce 50


state 67
	factor : '-' . cte  (51)

	cte  shift 92
	.  error


state 68
	asignacion : id SIMB_ASIGNACION expresion .  (42)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 93
	'-'  shift 94
	';'  reduce 42


state 69
	expresion : termino .  (45)
	termino : termino . '*' factor  (46)
	termino : termino . '/' factor  (47)

	'*'  shift 95
	'/'  shift 96
	SIMB_MAY_IGUAL  reduce 45
	SIMB_MEN_IGUAL  reduce 45
	SIMB_DISTINTO  reduce 45
	'+'  reduce 45
	'-'  reduce 45
	'}'  reduce 45
	';'  reduce 45
	')'  reduce 45
	'='  reduce 45
	'<'  reduce 45
	'>'  reduce 45


state 70
	termino : factor .  (48)

	.  reduce 48


state 71
	parametro_real : id .  (55)

	.  reduce 55


state 72
	parametro_real : cte .  (56)

	.  reduce 56


state 73
	retorno_funcion : id '(' ')' .  (52)

	.  reduce 52


state 74
	retorno_funcion : id '(' parametro_real . ')'  (53)
	retorno_funcion : id '(' parametro_real . ',' parametro_real ')'  (54)

	','  shift 97
	')'  shift 98
	.  error


state 75
	for_continue : cadena ':' For . '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For . '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	'('  shift 99
	.  error


state 76
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)
	expresion_booleana : expresion . comparador expresion  (64)

	SIMB_MAY_IGUAL  shift 100
	SIMB_MEN_IGUAL  shift 101
	SIMB_DISTINTO  shift 102
	'+'  shift 93
	'-'  shift 94
	'='  shift 103
	'<'  shift 104
	'>'  shift 105
	.  error

	comparador  goto 106


state 77
	condicion_if : '(' expresion_booleana . ')'  (63)

	')'  shift 107
	.  error


state 78
	then_selec : then . '{' ejecutable_for '}'  (59)
	then_selec : then . inst_ejecutable_for  (60)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	'{'  shift 110
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	inst_ejecutable_for  goto 112


state 79
	seleccion : If condicion_if then_selec . end_if  (57)
	seleccion : If condicion_if then_selec . else_selecc end_if  (58)

	Else  shift 113
	end_if  shift 114
	.  error

	else_selecc  goto 115


state 80
	impresion : out cadena ')' .  (72)

	.  reduce 72


state 81
	impresion : out '(' cadena . ')'  (71)
	impresion : out '(' cadena .  (73)

	')'  shift 116
	';'  reduce 73


state 82
	header_funcion : fun id '(' .  (25)

	.  reduce 25


state 83
	for_continue : For '(' id . SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id . SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	SIMB_ASIGNACION  shift 117
	.  error


state 84
	bloque_sentencias : '{' sentencia '}' .  (6)

	.  reduce 6


state 85
	bloque_sentencias : bloque_sentencias '{' sentencia . '}'  (5)
	sentencia : sentencia . declarativa  (11)
	sentencia : sentencia . ejecutable  (12)

	id  shift 6
	cadena  shift 7
	If  shift 8
	out  shift 9
	fun  shift 10
	ui8  shift 11
	f64  shift 12
	discard  shift 13
	For  shift 14
	defer  shift 15
	'}'  shift 118
	.  error

	declarativa  goto 49
	ejecutable  goto 50
	dec_variables  goto 21
	dec_funcion  goto 22
	tipo  goto 23
	list_variables  goto 24
	header_funcion  goto 25
	inst_ejecutable  goto 26
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 86
	dec_variables : tipo list_variables ';' .  (15)

	.  reduce 15


state 87
	list_variables : list_variables ',' id .  (21)

	.  reduce 21


state 88
	cola_funcion : ')' ':' . tipo '{' cuerpo_fun '}'  (26)

	id  shift 55
	ui8  shift 11
	f64  shift 12
	.  error

	tipo  goto 119


state 89
	parametro : tipo id .  (27)

	.  reduce 27


state 90
	dec_funcion : header_funcion parametro ',' . parametro cola_funcion  (24)

	id  shift 55
	ui8  shift 11
	f64  shift 12
	.  error

	tipo  goto 57
	parametro  goto 120


state 91
	dec_funcion : header_funcion parametro cola_funcion .  (23)

	.  reduce 23


state 92
	factor : '-' cte .  (51)

	.  reduce 51


state 93
	expresion : expresion '+' . termino  (43)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	.  error

	termino  goto 121
	factor  goto 70


state 94
	expresion : expresion '-' . termino  (44)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	.  error

	termino  goto 122
	factor  goto 70


state 95
	termino : termino '*' . factor  (46)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	.  error

	factor  goto 123


state 96
	termino : termino '/' . factor  (47)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	.  error

	factor  goto 124


state 97
	retorno_funcion : id '(' parametro_real ',' . parametro_real ')'  (54)

	id  shift 71
	cte  shift 72
	.  error

	parametro_real  goto 125


state 98
	retorno_funcion : id '(' parametro_real ')' .  (53)

	.  reduce 53


state 99
	for_continue : cadena ':' For '(' . id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' . id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	id  shift 126
	.  error


state 100
	comparador : SIMB_MAY_IGUAL .  (66)

	.  reduce 66


state 101
	comparador : SIMB_MEN_IGUAL .  (67)

	.  reduce 67


state 102
	comparador : SIMB_DISTINTO .  (65)

	.  reduce 65


state 103
	comparador : '=' .  (68)

	.  reduce 68


state 104
	comparador : '<' .  (69)

	.  reduce 69


state 105
	comparador : '>' .  (70)

	.  reduce 70


state 106
	expresion_booleana : expresion comparador . expresion  (64)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	.  error

	expresion  goto 127
	termino  goto 69
	factor  goto 70


state 107
	condicion_if : '(' expresion_booleana ')' .  (63)

	.  reduce 63


state 108
	inst_ejecutable_for : Break . ';'  (85)
	inst_ejecutable_for : Break . ':' cadena ';'  (86)

	';'  shift 128
	':'  shift 129
	.  error


state 109
	inst_ejecutable_for : Continue . ';'  (87)

	';'  shift 130
	.  error


state 110
	then_selec : then '{' . ejecutable_for '}'  (59)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	ejecutable_for  goto 131
	inst_ejecutable_for  goto 132


state 111
	inst_ejecutable_for : inst_ejecutable .  (84)

	.  reduce 84


state 112
	then_selec : then inst_ejecutable_for .  (60)

	.  reduce 60


state 113
	else_selecc : Else . '{' ejecutable_for '}'  (61)
	else_selecc : Else . inst_ejecutable_for  (62)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	'{'  shift 133
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	inst_ejecutable_for  goto 134


state 114
	seleccion : If condicion_if then_selec end_if .  (57)

	.  reduce 57


state 115
	seleccion : If condicion_if then_selec else_selecc . end_if  (58)

	end_if  shift 135
	.  error


state 116
	impresion : out '(' cadena ')' .  (71)

	.  reduce 71


state 117
	for_continue : For '(' id SIMB_ASIGNACION . cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION . cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	cte  shift 136
	.  error


state 118
	bloque_sentencias : bloque_sentencias '{' sentencia '}' .  (5)

	.  reduce 5


state 119
	cola_funcion : ')' ':' tipo . '{' cuerpo_fun '}'  (26)

	'{'  shift 137
	.  error


state 120
	dec_funcion : header_funcion parametro ',' parametro . cola_funcion  (24)

	')'  shift 56
	.  error

	cola_funcion  goto 138


state 121
	expresion : expresion '+' termino .  (43)
	termino : termino . '*' factor  (46)
	termino : termino . '/' factor  (47)

	'*'  shift 95
	'/'  shift 96
	SIMB_MAY_IGUAL  reduce 43
	SIMB_MEN_IGUAL  reduce 43
	SIMB_DISTINTO  reduce 43
	'+'  reduce 43
	'-'  reduce 43
	'}'  reduce 43
	';'  reduce 43
	')'  reduce 43
	'='  reduce 43
	'<'  reduce 43
	'>'  reduce 43


state 122
	expresion : expresion '-' termino .  (44)
	termino : termino . '*' factor  (46)
	termino : termino . '/' factor  (47)

	'*'  shift 95
	'/'  shift 96
	SIMB_MAY_IGUAL  reduce 44
	SIMB_MEN_IGUAL  reduce 44
	SIMB_DISTINTO  reduce 44
	'+'  reduce 44
	'-'  reduce 44
	'}'  reduce 44
	';'  reduce 44
	')'  reduce 44
	'='  reduce 44
	'<'  reduce 44
	'>'  reduce 44


state 123
	termino : termino '*' factor .  (46)

	.  reduce 46


state 124
	termino : termino '/' factor .  (47)

	.  reduce 47


state 125
	retorno_funcion : id '(' parametro_real ',' parametro_real . ')'  (54)

	')'  shift 139
	.  error


state 126
	for_continue : cadena ':' For '(' id . SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id . SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	SIMB_ASIGNACION  shift 140
	.  error


state 127
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)
	expresion_booleana : expresion comparador expresion .  (64)

	'+'  shift 93
	'-'  shift 94
	')'  reduce 64


state 128
	inst_ejecutable_for : Break ';' .  (85)

	.  reduce 85


state 129
	inst_ejecutable_for : Break ':' . cadena ';'  (86)

	cadena  shift 141
	.  error


state 130
	inst_ejecutable_for : Continue ';' .  (87)

	.  reduce 87


state 131
	then_selec : then '{' ejecutable_for . '}'  (59)
	ejecutable_for : ejecutable_for . inst_ejecutable_for  (82)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	'}'  shift 142
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	inst_ejecutable_for  goto 143


state 132
	ejecutable_for : inst_ejecutable_for .  (83)

	.  reduce 83


state 133
	else_selecc : Else '{' . ejecutable_for '}'  (61)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	ejecutable_for  goto 144
	inst_ejecutable_for  goto 132


state 134
	else_selecc : Else inst_ejecutable_for .  (62)

	.  reduce 62


state 135
	seleccion : If condicion_if then_selec else_selecc end_if .  (58)

	.  reduce 58


state 136
	for_continue : For '(' id SIMB_ASIGNACION cte . ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte . ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	';'  shift 145
	.  error


state 137
	cola_funcion : ')' ':' tipo '{' . cuerpo_fun '}'  (26)

	id  shift 6
	cadena  shift 7
	If  shift 8
	out  shift 9
	fun  shift 10
	ui8  shift 11
	f64  shift 12
	discard  shift 13
	For  shift 14
	defer  shift 15
	.  error

	sentencia  goto 146
	declarativa  goto 19
	ejecutable  goto 20
	dec_variables  goto 21
	dec_funcion  goto 22
	tipo  goto 23
	list_variables  goto 24
	header_funcion  goto 25
	cuerpo_fun  goto 147
	inst_ejecutable  goto 26
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 138
	dec_funcion : header_funcion parametro ',' parametro cola_funcion .  (24)

	.  reduce 24


state 139
	retorno_funcion : id '(' parametro_real ',' parametro_real ')' .  (54)

	.  reduce 54


state 140
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION . cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION . cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	cte  shift 148
	.  error


state 141
	inst_ejecutable_for : Break ':' cadena . ';'  (86)

	';'  shift 149
	.  error


state 142
	then_selec : then '{' ejecutable_for '}' .  (59)

	.  reduce 59


state 143
	ejecutable_for : ejecutable_for inst_ejecutable_for .  (82)

	.  reduce 82


state 144
	else_selecc : Else '{' ejecutable_for . '}'  (61)
	ejecutable_for : ejecutable_for . inst_ejecutable_for  (82)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	'}'  shift 150
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	inst_ejecutable_for  goto 143


state 145
	for_continue : For '(' id SIMB_ASIGNACION cte ';' . id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte ';' . id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	id  shift 151
	.  error


state 146
	sentencia : sentencia . declarativa  (11)
	sentencia : sentencia . ejecutable  (12)
	cuerpo_fun : sentencia . Return '(' expresion ')' ';'  (29)
	cuerpo_fun : sentencia . Return '(' expresion ';'  (30)
	cuerpo_fun : sentencia . Return expresion ';'  (31)
	cuerpo_fun : sentencia . Return expresion ')' ';'  (32)
	cuerpo_fun : sentencia . Return expresion  (33)
	cuerpo_fun : sentencia . Return '(' expresion ')'  (34)

	id  shift 6
	cadena  shift 7
	If  shift 8
	out  shift 9
	fun  shift 10
	Return  shift 152
	ui8  shift 11
	f64  shift 12
	discard  shift 13
	For  shift 14
	defer  shift 15
	.  error

	declarativa  goto 49
	ejecutable  goto 50
	dec_variables  goto 21
	dec_funcion  goto 22
	tipo  goto 23
	list_variables  goto 24
	header_funcion  goto 25
	inst_ejecutable  goto 26
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32


state 147
	cola_funcion : ')' ':' tipo '{' cuerpo_fun . '}'  (26)

	'}'  shift 153
	.  error


state 148
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte . ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte . ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	';'  shift 154
	.  error


state 149
	inst_ejecutable_for : Break ':' cadena ';' .  (86)

	.  reduce 86


state 150
	else_selecc : Else '{' ejecutable_for '}' .  (61)

	.  reduce 61


state 151
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id . comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id . comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	SIMB_MAY_IGUAL  shift 100
	SIMB_MEN_IGUAL  shift 101
	SIMB_DISTINTO  shift 102
	'='  shift 103
	'<'  shift 104
	'>'  shift 105
	.  error

	comparador  goto 155


state 152
	cuerpo_fun : sentencia Return . '(' expresion ')' ';'  (29)
	cuerpo_fun : sentencia Return . '(' expresion ';'  (30)
	cuerpo_fun : sentencia Return . expresion ';'  (31)
	cuerpo_fun : sentencia Return . expresion ')' ';'  (32)
	cuerpo_fun : sentencia Return . expresion  (33)
	cuerpo_fun : sentencia Return . '(' expresion ')'  (34)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	'('  shift 156
	.  error

	expresion  goto 157
	termino  goto 69
	factor  goto 70


state 153
	cola_funcion : ')' ':' tipo '{' cuerpo_fun '}' .  (26)

	.  reduce 26


state 154
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' . id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' . id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	id  shift 158
	.  error


state 155
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador . cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador . cte ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	cte  shift 159
	.  error


state 156
	cuerpo_fun : sentencia Return '(' . expresion ')' ';'  (29)
	cuerpo_fun : sentencia Return '(' . expresion ';'  (30)
	cuerpo_fun : sentencia Return '(' . expresion ')'  (34)

	id  shift 65
	cte  shift 66
	'-'  shift 67
	.  error

	expresion  goto 160
	termino  goto 69
	factor  goto 70


state 157
	cuerpo_fun : sentencia Return expresion . ';'  (31)
	cuerpo_fun : sentencia Return expresion . ')' ';'  (32)
	cuerpo_fun : sentencia Return expresion .  (33)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 93
	'-'  shift 94
	';'  shift 161
	')'  shift 162
	'}'  reduce 33


state 158
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id . comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id . comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	SIMB_MAY_IGUAL  shift 100
	SIMB_MEN_IGUAL  shift 101
	SIMB_DISTINTO  shift 102
	'='  shift 103
	'<'  shift 104
	'>'  shift 105
	.  error

	comparador  goto 163


state 159
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte . ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte . ';' mas_o_menos cte ')' inst_ejecutable_for  (77)

	';'  shift 164
	.  error


state 160
	cuerpo_fun : sentencia Return '(' expresion . ')' ';'  (29)
	cuerpo_fun : sentencia Return '(' expresion . ';'  (30)
	cuerpo_fun : sentencia Return '(' expresion . ')'  (34)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 93
	'-'  shift 94
	';'  shift 165
	')'  shift 166
	.  error


state 161
	cuerpo_fun : sentencia Return expresion ';' .  (31)

	.  reduce 31


state 162
	cuerpo_fun : sentencia Return expresion ')' . ';'  (32)

	';'  shift 167
	.  error


state 163
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador . cte ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador . cte ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	cte  shift 168
	.  error


state 164
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' . mas_o_menos cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' . mas_o_menos cte ')' inst_ejecutable_for  (77)

	'+'  shift 169
	'-'  shift 170
	.  error

	mas_o_menos  goto 171


state 165
	cuerpo_fun : sentencia Return '(' expresion ';' .  (30)

	.  reduce 30


state 166
	cuerpo_fun : sentencia Return '(' expresion ')' . ';'  (29)
	cuerpo_fun : sentencia Return '(' expresion ')' .  (34)

	';'  shift 172
	'}'  reduce 34


state 167
	cuerpo_fun : sentencia Return expresion ')' ';' .  (32)

	.  reduce 32


state 168
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte . ';' mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte . ';' mas_o_menos cte ')' inst_ejecutable_for  (79)

	';'  shift 173
	.  error


state 169
	mas_o_menos : '+' .  (80)

	.  reduce 80


state 170
	mas_o_menos : '-' .  (81)

	.  reduce 81


state 171
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos . cte ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos . cte ')' inst_ejecutable_for  (77)

	cte  shift 174
	.  error


state 172
	cuerpo_fun : sentencia Return '(' expresion ')' ';' .  (29)

	.  reduce 29


state 173
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' . mas_o_menos cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' . mas_o_menos cte ')' inst_ejecutable_for  (79)

	'+'  shift 169
	'-'  shift 170
	.  error

	mas_o_menos  goto 175


state 174
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte . ')' '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte . ')' inst_ejecutable_for  (77)

	')'  shift 176
	.  error


state 175
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos . cte ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos . cte ')' inst_ejecutable_for  (79)

	cte  shift 177
	.  error


state 176
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' . '{' ejecutable_for '}'  (76)
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' . inst_ejecutable_for  (77)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	'{'  shift 178
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	inst_ejecutable_for  goto 179


state 177
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte . ')' '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte . ')' inst_ejecutable_for  (79)

	')'  shift 180
	.  error


state 178
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' . ejecutable_for '}'  (76)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	ejecutable_for  goto 181
	inst_ejecutable_for  goto 132


state 179
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for .  (77)

	.  reduce 77


state 180
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' . '{' ejecutable_for '}'  (78)
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' . inst_ejecutable_for  (79)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	'{'  shift 182
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	inst_ejecutable_for  goto 183


state 181
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for . '}'  (76)
	ejecutable_for : ejecutable_for . inst_ejecutable_for  (82)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	'}'  shift 184
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	inst_ejecutable_for  goto 143


state 182
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' . ejecutable_for '}'  (78)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	ejecutable_for  goto 185
	inst_ejecutable_for  goto 132


state 183
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' inst_ejecutable_for .  (79)

	.  reduce 79


state 184
	for_continue : For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}' .  (76)

	.  reduce 76


state 185
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for . '}'  (78)
	ejecutable_for : ejecutable_for . inst_ejecutable_for  (82)

	id  shift 44
	cadena  shift 7
	If  shift 8
	out  shift 9
	Break  shift 108
	discard  shift 13
	For  shift 14
	Continue  shift 109
	'}'  shift 186
	.  error

	inst_ejecutable  goto 111
	asignacion  goto 27
	seleccion  goto 28
	impresion  goto 29
	invocar_fun  goto 30
	for_continue  goto 31
	retorno_funcion  goto 32
	inst_ejecutable_for  goto 143


state 186
	for_continue : cadena ':' For '(' id SIMB_ASIGNACION cte ';' id comparador cte ';' mas_o_menos cte ')' '{' ejecutable_for '}' .  (78)

	.  reduce 78


39 terminals, 34 nonterminals
88 grammar rules, 187 states
